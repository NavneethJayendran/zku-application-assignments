{
	"compiler": {
		"version": "0.8.7+commit.e28d00a7"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "payable",
				"type": "constructor"
			},
			{
				"inputs": [],
				"name": "BuyerDeadlineNotExceeded",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "InvalidState",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "OnlyBuyer",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "OnlySeller",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "ValueNotEven",
				"type": "error"
			},
			{
				"anonymous": false,
				"inputs": [],
				"name": "Aborted",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [],
				"name": "ItemReceived",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [],
				"name": "PurchaseConfirmed",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [],
				"name": "SellerRefunded",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "abort",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "buyer",
				"outputs": [
					{
						"internalType": "address payable",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "completePurchase",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "confirmPurchase",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "confirmationTime",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "seller",
				"outputs": [
					{
						"internalType": "address payable",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "state",
				"outputs": [
					{
						"internalType": "enum Purchase.State",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "value",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"errors": {
				"BuyerDeadlineNotExceeded()": [
					{
						"notice": "Caller is not the buyer and the buyer still has time left since confirming the purchase."
					}
				],
				"InvalidState()": [
					{
						"notice": "The function cannot be called at the current state."
					}
				],
				"OnlyBuyer()": [
					{
						"notice": "Only the buyer can call this function."
					}
				],
				"OnlySeller()": [
					{
						"notice": "Only the seller can call this function."
					}
				],
				"ValueNotEven()": [
					{
						"notice": "The provided value has to be even."
					}
				]
			},
			"kind": "user",
			"methods": {
				"abort()": {
					"notice": "Abort the purchase and reclaim the ether. Can only be called by the seller before the contract is locked."
				},
				"confirmPurchase()": {
					"notice": "Confirm the purchase as buyer. Transaction has to include `2 * value` ether. The ether will be locked until confirmReceived is called."
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"purchase.sol": "Purchase"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"purchase.sol": {
			"keccak256": "0xa7a4a045782eba75cfb4942645ace1f12da3771383f0948ae18a29066e792e14",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://f379e13972f31587af2fb90137dcf05e93e6bc4e6dd3fd30f1dd07316d662314",
				"dweb:/ipfs/QmXAsxDbTdiuui5vRXmBxnbxCy1Q3opk3BXsa3vsXhauw1"
			]
		}
	},
	"version": 1
}